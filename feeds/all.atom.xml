<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Notebooks</title><link href="http://nb.asorge.de/" rel="alternate"></link><link href="http://nb.asorge.de/feeds/all.atom.xml" rel="self"></link><id>http://nb.asorge.de/</id><updated>2014-08-25T00:00:00+02:00</updated><entry><title>Sectioning &amp; Bootstrapping</title><link href="http://nb.asorge.de/sectioning-and-bootstrapping.html" rel="alternate"></link><updated>2014-08-25T00:00:00+02:00</updated><author><name></name></author><id>tag:nb.asorge.de,2014-08-25:sectioning-and-bootstrapping.html</id><summary type="html">&lt;p&gt;&lt;strong&gt;&lt;a href="http://nbviewer.ipython.org/github/andsor/notebooks/blob/master/notebooks/sectioning-and-bootstrapping.ipynb"&gt;View this notebook in
nbviewer&lt;/a&gt; | &lt;a href="https://github.com/andsor/notebooks/raw/master/notebooks/sectioning-and-bootstrapping.pdf"&gt;Get
PDF&lt;/a&gt; &lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;
&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;&lt;a href="http://github.com/andsor/notebooks"&gt;This work&lt;/a&gt; is licensed under a &lt;a href="http://creativecommons.org/licenses/by/4.0/"&gt;Creative
Commons Attribution 4.0 International
License&lt;/a&gt;.&lt;/p&gt;
&lt;h1 id="sectioning-and-bootstrapping"&gt;Sectioning and bootstrapping&lt;/h1&gt;
&lt;p&gt;The following presentation is based on the excellent textbook by Asmussen and
Glynn &lt;cite data-cite="Asmussen2007Stochastic"&gt;(&lt;a href="http://dx.doi.org/10.1007/978-0-387-69033-9"&gt;Asmussen &amp;amp; Glynn,
2007&lt;/a&gt;)&lt;/cite&gt;.&lt;/p&gt;
&lt;p&gt;Given a random element $X$, its distribution $F$, and some real-valued
functional $\psi$, we would like to estimate $\psi(F)$ and its $1-\alpha$
confidence interval without further assumptions.
For example, the mean is the
functional $\psi(F) = \int x F(dx)$, where $dx$ is the probability to find $X$
in $dx$.&lt;/p&gt;
&lt;p&gt;Given $R$ independent samples $X_1, \ldots, X_R$ from $F$, an estimate for
$\psi(F)$ is $\psi(\hat{F}_R)$, where&lt;/p&gt;
&lt;p&gt;$$
\hat{F}_R(dx) := \frac{1}{R} \sum_{r=1}^R \delta_{X_r}(dx)
$$&lt;/p&gt;
&lt;p&gt;is the &lt;em&gt;empirical distribution&lt;/em&gt; and $\delta_{X_r}(A) = 1 \Leftrightarrow X_r
\in A$.&lt;/p&gt;
&lt;p&gt;For real-valued random variables, the empirical cumulative distribution
function is&lt;/p&gt;
&lt;p&gt;$$
\hat{F}_R(x) := \frac{1}{R} \sum_{r=1}^R \mathbb{1}_{\{X_r \leq x \}}.
$$&lt;/p&gt;
&lt;p&gt;As $R \to \infty$, we have $\psi(\hat{F}_R) \to \psi(F)$ almost surely &lt;cite data-cite="Asmussen2007Stochastic"&gt;(&lt;a href="http://dx.doi.org/10.1007/978-0-387-69033-9"&gt;Asmussen &amp;amp; Glynn, 2007&lt;/a&gt;)&lt;/cite&gt;.
Furthermore, we have a central limit theorem such that $\psi(\hat{F}_R)$ is
distributed as $\psi(F) + Y$, where $Y \sim \mathcal{N}(0, \sigma/\sqrt{R})$.&lt;/p&gt;
&lt;h2 id="sectioning"&gt;Sectioning&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;Sectioning&lt;/em&gt; means splitting the sample into $N$ subsamples (sections) of size
$K$. The empirical distribution of the $n$-th section is&lt;/p&gt;
&lt;p&gt;$$
\hat{F}_{n,K}(dx) := \frac{1}{K} \sum_{r=(n-1)K + 1}^{nK} \delta_{X_r}(dx).
$$&lt;/p&gt;
&lt;p&gt;The $1 - \alpha$ confidence interval for the estimator $\psi(\hat{F})$ is&lt;/p&gt;
&lt;p&gt;$$
\psi(\hat{F}) \pm t_{1-\alpha/2} \frac{\hat{\sigma}}{\sqrt{N}},
$$&lt;/p&gt;
&lt;p&gt;where $t_{1-\alpha/2}$ is the critical value of the Student t distribution with
$N-1$ degrees of freedom and the estimator for the variance&lt;/p&gt;
&lt;p&gt;$$
\hat{\sigma}^2 := \frac{1}{N-1} \sum_{n=1}^N \left(\psi(\hat{F}_{n,K}) -
\psi(\hat{F}_R) \right)^2.
$$&lt;/p&gt;
&lt;p&gt;The number of sections needs to be sufficiently large in order for the central
limit theorem to approximately hold.&lt;/p&gt;
&lt;h2 id="bootstrapping"&gt;Bootstrapping&lt;/h2&gt;
&lt;p&gt;When a model for the distribution $F$ is lacking, or too complicated for
statistical inference, bootstrapping methods provide alternatives.
Bootstrapping takes the empirical distribution $\hat{F}_R$ as a surrogate for
the true distribution $F$.
Instead of drawing more samples from $F$, bootstrapping involves resampling
from $\hat{F}_R$.&lt;/p&gt;
&lt;p&gt;The true $1 - \alpha$ confidence interval of the estimator $\psi(\hat{F}_R)$ is&lt;/p&gt;
&lt;p&gt;$$
(\psi(\hat{F}_R) - z_2, \psi(\hat{F}_R) - z_1)
$$&lt;/p&gt;
&lt;p&gt;with the $\alpha/2$ and $1 - \alpha/2$ quantiles $z_1, z_2$&lt;/p&gt;
&lt;p&gt;$$
P(\psi(\hat{F}_R) - \psi(F) &amp;lt; z_1) = P(\psi(\hat{F}_R) - \psi(F) &amp;gt; z_2) =
\frac{\alpha}{2}
$$&lt;/p&gt;
&lt;p&gt;such that&lt;/p&gt;
&lt;p&gt;$$
P(\psi(F) \in (\psi(\hat{F}_R) - z_2, \psi(\hat{F}_R) - z_1)) = 1 - \alpha.
$$&lt;/p&gt;
&lt;p&gt;Assuming that $\hat{F}_R \approx F$, the empirical quantiles $z_1^*, z_2^*$
satisfy &lt;cite data-cite="Asmussen2007Stochastic"&gt;(&lt;a href="http://dx.doi.org/10.1007/978-0-387-69033-9"&gt;Asmussen &amp;amp; Glynn,
2007&lt;/a&gt;)&lt;/cite&gt;&lt;/p&gt;
&lt;p&gt;$$
P_{\hat{F}_R}(\psi(\hat{F}_R) - \psi(F) &amp;lt; z_1^*) =
P_{\hat{F}_R}(\psi(\hat{F}_R) - \psi(F) &amp;gt; z_2^*) =
\frac{\alpha}{2}
$$&lt;/p&gt;
&lt;p&gt;We draw $B$ bootstrap samples of size $R$ from $\hat{F}_R$.
The $b$-th bootstrap sample is $X_{1,b}^*, \ldots, X_{R,b}^*$ with each random
variable $X_{r,b}^*$ drawn independently from $X_1, \ldots, X_R$ with equal
probabilities $P(X_{r,b}^* = X_{r'}) = \frac{1}{R}$.
The empirical distribution of the $b$-th bootstrap sample is&lt;/p&gt;
&lt;p&gt;$$
\hat{F}_{R,b}^*(dx) := \frac{1}{R} \sum_{r=1}^R \delta_{X_{r,b}^*}(dx).
$$&lt;/p&gt;
&lt;p&gt;Then the empirical quantiles $z_1^*, z_2^*$ are the $\lfloor
\frac{\alpha}{2}(B+1) \rfloor$-th and $\lfloor (1 - \frac{\alpha}{2})(B+1)
\rfloor$-th order statistic, respectively, of the $B$ independent and
identically distributed random variables&lt;/p&gt;
&lt;p&gt;$$
\left( \psi(\hat{F}_{R,b}^*) - \psi(\hat{F}_R) \right)_{b=1}^B.
$$&lt;/p&gt;
&lt;p&gt;These quantiles $z_1^*, z_2^*$ approximate the quantiles $z_1, z_2$ of the true
distribution $F$, and hence, yield the approximate $1 - \alpha$ confidence
interval &lt;cite data-cite="Asmussen2007Stochastic"&gt;(&lt;a href="http://dx.doi.org/10.1007/978-0-387-69033-9"&gt;Asmussen &amp;amp; Glynn,
2007&lt;/a&gt;)&lt;/cite&gt;&lt;/p&gt;
&lt;p&gt;$$
\left( \psi(\hat{F}_R) - z_2^*, \psi(\hat{F}_R) - z_1^* \right).
$$&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/p&gt;</summary><category term="diss"></category></entry><entry><title>Template notebook</title><link href="http://nb.asorge.de/template-ipynb.html" rel="alternate"></link><updated>2014-08-25T00:00:00+02:00</updated><author><name></name></author><id>tag:nb.asorge.de,2014-08-25:template-ipynb.html</id><summary type="html">&lt;p&gt;&lt;strong&gt;&lt;a href="http://nbviewer.ipython.org/github/andsor/notebooks/blob/master/notebooks/template.ipynb"&gt;View this notebook in nbviewer&lt;/a&gt; | &lt;a href="https://github.com/andsor/notebooks/raw/master/notebooks/template.pdf"&gt;Get
PDF&lt;/a&gt; &lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;
&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;&lt;a href="http://github.com/andsor/notebooks"&gt;This work&lt;/a&gt; is licensed under a &lt;a href="http://creativecommons.org/licenses/by/4.0/"&gt;Creative
Commons Attribution 4.0 International
License&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;
&lt;div class="prompt input_prompt"&gt;
InÂ [1]:
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="input_area"&gt;
&lt;div class="highlight-ipynb"&gt;&lt;pre class="ipynb"&gt;&lt;span class="c"&gt;# numpy&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;numpy&lt;/span&gt; &lt;span class="kn"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;np&lt;/span&gt;

&lt;span class="c"&gt;# import sympy and configure latex output&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;sympy&lt;/span&gt;
&lt;span class="n"&gt;sympy&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;init_printing&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;use_unicode&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;IPython.display&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Math&lt;/span&gt;

&lt;span class="c"&gt;# import and configure matplotlib&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;matplotlib&lt;/span&gt; &lt;span class="kn"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;mpl&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;matplotlib.pyplot&lt;/span&gt; &lt;span class="kn"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;plt&lt;/span&gt;
&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="k"&gt;matplotlib&lt;/span&gt; &lt;span class="n"&gt;inline&lt;/span&gt;
&lt;span class="c"&gt;## use Scalable Vector Graphics (SVG) format for figures&lt;/span&gt;
&lt;span class="c"&gt;## remember to employ rasterized option when plotting large&lt;/span&gt;
&lt;span class="c"&gt;## datasets to keep figure size down&lt;/span&gt;
&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="k"&gt;config&lt;/span&gt; &lt;span class="n"&gt;InlineBackend&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;figure_format&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"svg"&lt;/span&gt;
&lt;span class="c"&gt;## load matplotlib inline integration for base16 ipython notebook&lt;/span&gt;
&lt;span class="c"&gt;## themes&lt;/span&gt;
&lt;span class="c"&gt;## https://github.com/benjaminaschultz/base16-ipython-matplotlibrc&lt;/span&gt;
&lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="k"&gt;load_ext&lt;/span&gt; &lt;span class="n"&gt;base16_mplrc&lt;/span&gt;
    &lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="k"&gt;base16_mplrc&lt;/span&gt;
&lt;span class="k"&gt;except&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;pass&lt;/span&gt;
&lt;span class="n"&gt;mpl&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rcParams&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;update&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="s"&gt;'figure.dpi'&lt;/span&gt;        &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;300&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s"&gt;'savefig.dpi'&lt;/span&gt;       &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;300&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s"&gt;'grid.color'&lt;/span&gt;        &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;mpl&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rcParams&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'xtick.color'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;

&lt;span class="c"&gt;# load ipython cython magic&lt;/span&gt;
&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="k"&gt;load_ext&lt;/span&gt; &lt;span class="n"&gt;cythonmagic&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="output_wrapper"&gt;
&lt;div class="output"&gt;
&lt;div class="output_area"&gt;&lt;div class="prompt"&gt;&lt;/div&gt;
&lt;div class="output_subarea output_stream output_stdout output_text"&gt;
&lt;pre&gt;

                     Could not detect base-16 ipython notebook theme. Download base16 theme notebook theme
                     from https://github.com/nsonnad/base16-ipython-notebook . Using &amp;amp;apos;default&amp;amp;apos; theme.

                     Could not detect base-16 ipython notebook theme shade. Download base16 theme notebook themes
                     from https://github.com/nsonnad/base16-ipython-notebook . Using &amp;amp;apos;default&amp;amp;apos; theme.
Setting plotting theme to default-light. Palette available in b16_colors

&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/p&gt;</summary><category term=""></category></entry><entry><title>Test post</title><link href="http://nb.asorge.de/test.html" rel="alternate"></link><updated>2014-08-21T09:54:46+02:00</updated><author><name>Andreas Sorge</name></author><id>tag:nb.asorge.de,2014-08-21:test.html</id><summary type="html">&lt;p&gt;&lt;strong&gt;&lt;a href="http://nbviewer.ipython.org/github/andsor/notebooks/blob/master/notebooks/test.ipynb"&gt;View this notebook in nbviewer&lt;/a&gt; | &lt;a href="https://github.com/andsor/notebooks/raw/master/notebooks/test.pdf"&gt;Get
PDF&lt;/a&gt; &lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;
&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h1 id="hello-world-"&gt;Hello, world!&lt;/h1&gt;
&lt;p&gt;This is our hello world notebook!&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;
&lt;div class="prompt input_prompt"&gt;
InÂ []:
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="input_area"&gt;
&lt;div class="highlight-ipynb"&gt;&lt;pre class="ipynb"&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Hello world!"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;
&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;Here we continue with some formula&lt;/p&gt;
&lt;p&gt;\begin{align}
f(x) = \sin(\pi x),
\end{align}&lt;/p&gt;
&lt;p&gt;which we would like to plot&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;
&lt;div class="prompt input_prompt"&gt;
InÂ []:
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="input_area"&gt;
&lt;div class="highlight-ipynb"&gt;&lt;pre class="ipynb"&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="k"&gt;matplotlib&lt;/span&gt; &lt;span class="n"&gt;inline&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;matplotlib&lt;/span&gt; &lt;span class="kn"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;mpl&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;matplotlib.pyplot&lt;/span&gt; &lt;span class="kn"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;plt&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;numpy&lt;/span&gt; &lt;span class="kn"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;np&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;
&lt;div class="prompt input_prompt"&gt;
InÂ []:
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="input_area"&gt;
&lt;div class="highlight-ipynb"&gt;&lt;pre class="ipynb"&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;linspace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;0.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;2.&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;plot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sin&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pi&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;show&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;
&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;This is the end of the file.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/p&gt;</summary></entry></feed>